module.exports = {
  root: true,
  parser: '@typescript-eslint/parser',
  extends: [
    'plugin:react-hooks/recommended',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
  ],
  plugins: ['react', 'react-hooks', 'prettier', 'import'],
  rules: {
    'react/jsx-uses-react': 2,
    semi: ['error'],
    'no-unused-vars': 'error',
    'no-caller': 'error',
    'no-with': 'error',
    'no-catch-shadow': 'error',
    'no-inferrable-types': 'off',
    'no-constant-condition': 'error',
    'no-misleading-character-class': 'error',
    'no-unmodified-loop-condition': 'error',
    'no-import-assign': 'error',
    'import/export': 'error',
    'import/no-named-as-default': 'error',
    'import/no-webpack-loader-syntax': 'error',
    'import/no-self-import': 'error',
    'constructor-super': 'error',
    'no-class-assign': 'error',
    'no-const-assign': 'error',
    'no-dupe-class-members': 'error',
    'no-new-symbol': 'error',
    'no-this-before-super': 'error',
    'no-buffer-constructor': 'error',
    'for-direction': 'error',
    'getter-return': 'error',
    'no-async-promise-executor': 'error',
    'no-await-in-loop': 'error',
    'no-compare-neg-zero': 'error',
    'no-cond-assign': 'error',
    'no-control-regex': 'error',
    'no-debugger': 'error',
    'no-dupe-args': 'error',
    'no-dupe-keys': 'error',
    'no-duplicate-case': 'error',
    'no-empty-character-class': 'error',
    'no-ex-assign': 'error',
    'no-func-assign': 'error',
    'no-inner-declarations': 'error',
    'no-invalid-regexp': 'error',
    'no-irregular-whitespace': 'error',
    'no-obj-calls': 'error',
    'no-prototype-builtins': 'error',
    'no-sparse-arrays': 'error',
    'no-template-curly-in-string': 'error',
    'no-unreachable': 'error',
    'no-unsafe-finally': 'error',
    'no-unsafe-negation': 'error',
    'use-isnan': 'error',
    'valid-typeof': 'error',
    'array-callback-return': 'error',
    'no-empty-pattern': 'error',
    'no-fallthrough': 'error',
    'no-self-assign': 'error',
    'no-self-compare': 'error',
    'no-unsafe-optional-chaining': 'error',
    '@typescript-eslint/no-invalid-void-type': 'off',
    '@typescript-eslint/no-misused-new': 'error',
    '@typescript-eslint/no-non-null-asserted-optional-chain': 'error',
    '@typescript-eslint/no-non-null-assertion': 'error',
    '@typescript-eslint/ban-ts-comment': 'error',
    '@typescript-eslint/no-loss-of-precision': 'error',
    'default-param-last': 'off',
    '@typescript-eslint/default-param-last': 'error',
    'max-params': 'error',
    '@typescript-eslint/naming-convention': [
      'error',
      {
        selector: ['interface'],
        format: ['PascalCase'],
        prefix: ['I'],
      },
      {
        selector: ['enum'],
        format: ['PascalCase'],
        prefix: ['E'],
      },
      {
        selector: ['enumMember'],
        format: ['UPPER_CASE'],
      },
      {
        selector: ['typeLike'],
        format: ['PascalCase'],
        prefix: ['T'],
      },
      {
        selector: ['variable'],
        modifiers: ['const'],
        format: ['camelCase', 'PascalCase', 'UPPER_CASE'],
      },
      {
        selector: ['function'],
        format: ['camelCase', 'PascalCase'],
      },
    ],

    'react-hooks/rules-of-hooks': 'error',
    'react-hooks/exhaustive-deps': 'off',
    'no-multiple-empty-lines': [
      'error',
      {
        max: 1,
      },
    ],
    'react/self-closing-comp': [
      'error',
      {
        component: true,
        html: true,
      },
    ],

    '@typescript-eslint/camelcase': 'off',
    '@typescript-eslint/no-unused-vars': 'error',
    '@typescript-eslint/no-var-requires': 'off',
    '@typescript-eslint/no-use-before-define': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/ban-types': 'off',
    'prettier/prettier': 'error',
  },
};
